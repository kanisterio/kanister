// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
import v1alpha1 "github.com/kanisterio/kanister/pkg/apis/cr/v1alpha1"

// ActionSetInterface is an autogenerated mock type for the ActionSetInterface type
type ActionSetInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *ActionSetInterface) Create(_a0 *v1alpha1.ActionSet) (*v1alpha1.ActionSet, error) {
	ret := _m.Called(_a0)

	var r0 *v1alpha1.ActionSet
	if rf, ok := ret.Get(0).(func(*v1alpha1.ActionSet) *v1alpha1.ActionSet); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.ActionSet)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*v1alpha1.ActionSet) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: name, options
func (_m *ActionSetInterface) Delete(name string, options *v1.DeleteOptions) error {
	ret := _m.Called(name, options)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *v1.DeleteOptions) error); ok {
		r0 = rf(name, options)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: name, options
func (_m *ActionSetInterface) Get(name string, options v1.GetOptions) (*v1alpha1.ActionSet, error) {
	ret := _m.Called(name, options)

	var r0 *v1alpha1.ActionSet
	if rf, ok := ret.Get(0).(func(string, v1.GetOptions) *v1alpha1.ActionSet); ok {
		r0 = rf(name, options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.ActionSet)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, v1.GetOptions) error); ok {
		r1 = rf(name, options)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: opts
func (_m *ActionSetInterface) List(opts v1.ListOptions) (*v1alpha1.ActionSetList, error) {
	ret := _m.Called(opts)

	var r0 *v1alpha1.ActionSetList
	if rf, ok := ret.Get(0).(func(v1.ListOptions) *v1alpha1.ActionSetList); ok {
		r0 = rf(opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.ActionSetList)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(v1.ListOptions) error); ok {
		r1 = rf(opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0
func (_m *ActionSetInterface) Update(_a0 *v1alpha1.ActionSet) (*v1alpha1.ActionSet, error) {
	ret := _m.Called(_a0)

	var r0 *v1alpha1.ActionSet
	if rf, ok := ret.Get(0).(func(*v1alpha1.ActionSet) *v1alpha1.ActionSet); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.ActionSet)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*v1alpha1.ActionSet) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
