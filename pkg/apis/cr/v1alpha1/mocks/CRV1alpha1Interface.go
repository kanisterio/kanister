// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import rest "k8s.io/client-go/rest"
import v1alpha1 "github.com/kanisterio/kanister/pkg/apis/cr/v1alpha1"

// CRV1alpha1Interface is an autogenerated mock type for the CRV1alpha1Interface type
type CRV1alpha1Interface struct {
	mock.Mock
}

// ActionSets provides a mock function with given fields: namespace
func (_m *CRV1alpha1Interface) ActionSets(namespace string) v1alpha1.ActionSetInterface {
	ret := _m.Called(namespace)

	var r0 v1alpha1.ActionSetInterface
	if rf, ok := ret.Get(0).(func(string) v1alpha1.ActionSetInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.ActionSetInterface)
		}
	}

	return r0
}

// Blueprints provides a mock function with given fields: namespace
func (_m *CRV1alpha1Interface) Blueprints(namespace string) v1alpha1.BlueprintInterface {
	ret := _m.Called(namespace)

	var r0 v1alpha1.BlueprintInterface
	if rf, ok := ret.Get(0).(func(string) v1alpha1.BlueprintInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.BlueprintInterface)
		}
	}

	return r0
}

// RESTClient provides a mock function with given fields:
func (_m *CRV1alpha1Interface) RESTClient() rest.Interface {
	ret := _m.Called()

	var r0 rest.Interface
	if rf, ok := ret.Get(0).(func() rest.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rest.Interface)
		}
	}

	return r0
}
