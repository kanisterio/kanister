/*
Copyright 2024 The Kanister Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// KopiaServerSecretRefApplyConfiguration represents an declarative configuration of the KopiaServerSecretRef type for use
// with apply.
type KopiaServerSecretRefApplyConfiguration struct {
	Key    *string                            `json:"key,omitempty"`
	Secret *ObjectReferenceApplyConfiguration `json:"secret,omitempty"`
}

// KopiaServerSecretRefApplyConfiguration constructs an declarative configuration of the KopiaServerSecretRef type for use with
// apply.
func KopiaServerSecretRef() *KopiaServerSecretRefApplyConfiguration {
	return &KopiaServerSecretRefApplyConfiguration{}
}

// WithKey sets the Key field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Key field is set to the value of the last call.
func (b *KopiaServerSecretRefApplyConfiguration) WithKey(value string) *KopiaServerSecretRefApplyConfiguration {
	b.Key = &value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *KopiaServerSecretRefApplyConfiguration) WithSecret(value *ObjectReferenceApplyConfiguration) *KopiaServerSecretRefApplyConfiguration {
	b.Secret = value
	return b
}
