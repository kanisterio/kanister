name: Release
permissions:
  contents: read

on:
  push:
    branches:
      - master

  workflow_dispatch:
     inputs:
      release_tag:
        description: 'Image tag in the format x.x.x(-rcx)'
        required: true
        type: string
      draft_release:
        description: 'Publish as a draft'
        required: true
        default: true
        type: boolean

env:
  DRAFT_RELEASE: ${{ github.event_name == 'workflow_dispatch' && inputs.draft_release == true && 'true' || 'false' }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  run_if:
    if: "${{ (github.event_name == 'push' && startsWith(github.event.head_commit.message, 'pre-release: Update version to')) || github.event_name == 'workflow_dispatch' }}"
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
    steps:
      - run: echo "Triggered by ${{ github.event_name }}"
      - run: 'echo "Draft release: ${{ env.DRAFT_RELEASE }}"'
      - id: release_tag
        env:
          COMMIT_MESSAGE: ${{github.event.head_commit.message}}
        run: |
          if [[ ${{github.event_name}} == "push" ]]
          then
            [[ "${COMMIT_MESSAGE}" =~ ^pre-release:\ Update\ version\ to\ ([0-9]*\.[0-9]*\.[0-9]*(\-[0-9a-z]+)?)\ .*$ ]] && echo "release_tag=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "release_tag=${{inputs.release_tag}}" >> $GITHUB_OUTPUT
          fi

  create_tag:
    needs: run_if
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      RELEASE_TAG: ${{ needs.run_if.outputs.release_tag }}
    outputs:
      tag_url: ${{ steps.output_tag.outputs.tag_url }}
    environment:
      name: release
      url: ${{ steps.output_tag.outputs.tag_url }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - id: create_tag
      run: |
        git config --global user.name 'Kasten Production'
        git config --global user.email 'infra@kasten.io'
        git tag -a "${RELEASE_TAG}" -m "Release version"
        git push origin "${RELEASE_TAG}"
    - id: output_tag
      run: echo "tag_url=https://github.com/kanisterio/kanister/releases/tag/${RELEASE_TAG}" >> "$GITHUB_OUTPUT"

  release_packages:
    runs-on: ubuntu-latest
    needs: [run_if, create_tag]
    permissions:
      packages: write
      contents: write
    env:
      RELEASE_TAG: ${{ needs.run_if.outputs.release_tag }}
    outputs:
      release: ${{ steps.output_release.outputs.release_url }}
    environment:
      name: release
      url: ${{ steps.output_release.outputs.release_url }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ env.RELEASE_TAG }}
        fetch-depth: 0
    # - name: Free Disk Space (Ubuntu)
      # uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
    - name: gorelease
      run: make gorelease
      env:
        GHCR_LOGIN_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GHCR_LOGIN_USER: ${{ github.actor }}
        GORELEASE_PARAMS: ${{ env.DRAFT_RELEASE == 'true' && '--draft' || '' }}
    - id: output_release
      run: echo "release_url=https://github.com/kanisterio/kanister/releases/tag/${RELEASE_TAG}" >> "$GITHUB_OUTPUT"

  build_docs:
    needs: [run_if, release_packages]
    permissions:
      contents: read
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    uses: ./.github/workflows/publish_docs.yaml
    with:
      release_tag: ${{ needs.run_if.outputs.release_tag }}

  publish_charts:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [run_if, release_packages]
    env:
      GH_BOT_TOKEN: ${{ secrets.KANISTER_BOT_GH_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_TAG: ${{ needs.run_if.outputs.release_tag }}
    steps:
      - name: Checkout kanister repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.RELEASE_TAG }}
      - name: Build helm charts
        run: |
          export PACKAGE_FOLDER=helm_package
          export HELM_RELEASE_REPO_URL=https://github.com/kanisterio/kanister/releases/download/${RELEASE_TAG}
          export HELM_RELEASE_REPO_INDEX=https://charts.kanister.io/index.yaml
          make package-helm VERSION=${RELEASE_TAG}
      - name: Upload chart archives to release
        run: |
          gh release upload ${RELEASE_TAG} helm_package/kanister-operator-*
      - name: Clone charts pages repo
        run: |
          git clone https://kanister-bot:${GH_BOT_TOKEN}@github.com/kanisterio/kanister-charts
      - name: Copy helm index
        run: |
          cp ./helm_package/index.yaml ./kanister-charts/
      - name: Commit changes
        working-directory: ./kanister-charts
        run: |
          git config --global user.name 'Kasten Bot'
          git config --global user.email 'kanister.maintainers@veeam.com'
          git add -A
          git commit -s -m "Update chart index to ${RELEASE_TAG}"
      - name: Push changes
        working-directory: ./kanister-charts
        run: |
          git push

  notify_slack:
    needs: [release_packages, build_docs]
    runs-on: ubuntu-latest
    steps:
      - name: Send slack notification
        id: slack
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          ## TODO: optionally include more information?
          payload: |
            text: "A new version of Kanister was just published: ${{ needs.release_packages.outputs.release }}"

  release_example_docker_images:
    needs: [run_if, release_packages]
    permissions:
      packages: write
      contents: read
    uses: ./.github/workflows/build_example_images.yaml
    with:
      image_tag: ${{ needs.run_if.outputs.release_tag }}
      ref: ${{ needs.run_if.outputs.release_tag }}
      platforms: linux/amd64
