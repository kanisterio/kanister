on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  gomod:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - run: make go-mod-tidy
    - run: make go-mod-download
    - run: tar -cvf ./src.tar.gz ./ # preserve file permissions
    - uses: actions/upload-artifact@v3
      with:
        name: src
        path: ./src.tar.gz
  lint:
    runs-on: ubuntu-20.04
    needs: gomod
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: src
    - run: tar -xvf ./src.tar.gz
    - run: make golint
  test:
    runs-on: ubuntu-20.04
    needs: [gomod, lint]
    strategy:
      fail-fast: false
      matrix:
        testSuite: [test, integration-test, helm-test]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: src
    - uses: helm/kind-action@v1.8.0
    - run: tar -xvf ./src.tar.gz
    - run: |
        make install-csi-hostpath-driver
        make install-minio
      if: matrix.testSuite == 'integration-test' || matrix.testSuite == 'helm-test'
    # A test (CRDSuite) that runs as part of `make test` requies atleast one CRD to
    # be present on the cluster. That's why we are only installing csi-hostpath-driver
    # before running `make test`, to create some CRDs on the cluster.
    - run: |
        make install-csi-hostpath-driver
        make install-minio
      if: matrix.testSuite == 'test'
    - run: make ${{ matrix.testSuite }}
  build:
    runs-on: ubuntu-20.04
    needs: [gomod, lint, test]
    strategy:
      matrix:
        bin: [controller, kanctl, kando]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: src
    - run: tar -xvf ./src.tar.gz
    - run: make build BIN=${{ matrix.bin }} GOBORING=true
  docs:
    runs-on: ubuntu-20.04
    needs: gomod
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: src
    - run: tar -xvf ./src.tar.gz
    - run: make docs
  release:
    runs-on: ubuntu-20.04
    needs: [test, build]
    if: github.ref_name == 'master' || startsWith(github.ref, 'refs/tags')
    permissions:
      packages: write
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: src
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - run: sudo rm -rf /usr/share/dotnet
    - run: sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - run: tar -xvf ./src.tar.gz
    - run: make release-snapshot
    - run: ./build/push_images.sh
