name: "Build & Test"

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  gomod:
    runs-on: ubuntu-20.04
    steps:
    -
      name: Checkout repository
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    # Leverage the GHA cache managed by the setup Go action.
    # It should do "the right thing"
    -
      name: Setup Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      with:
        go-version-file: 'go.mod'
        check-latest: true
    -
      name: Populate Go mod caches
      run: |
        go mod download
        go mod tidy
  lint:
    runs-on: ubuntu-20.04
    needs: gomod
    steps:
    -
      name: Checkout repository
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    # Leverage the GHA cache managed by the setup Go action.
    # This should use the cache from the `gomod` job
    -
      name: Setup Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      with:
        go-version-file: 'go.mod'
    -
      name: Lint
      run: ./build/golint.sh
  test:
    runs-on: ubuntu-20.04
    needs: [gomod, lint]
    strategy:
      fail-fast: false
      matrix:
        testSuite: [test, integration-test, helm-test]
    steps:
    -
      name: Checkout repository
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    # Leverage the GHA cache managed by the setup Go action.
    # This should use the cache from the `gomod` job
    -
      name: Setup Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      with:
        go-version-file: 'go.mod'
    -
      uses: helm/kind-action@v1.8.0
    -
      run: |
        make install-csi-hostpath-driver
        make install-minio
      if: matrix.testSuite == 'integration-test' || matrix.testSuite == 'helm-test'
    # A test (CRDSuite) that runs as part of `make test` requies atleast one CRD to
    # be present on the cluster. That's why we are only installing csi-hostpath-driver
    # before running `make test`, to create some CRDs on the cluster.
    -
      run: |
        make install-csi-hostpath-driver
        make install-minio
      if: matrix.testSuite == 'test'
    -
      run: make ${{ matrix.testSuite }}
  build:
    runs-on: ubuntu-20.04
    needs: [gomod, lint, test]
    strategy:
      matrix:
        bin: [controller, kanctl, kando]
    steps:
    -
      name: Checkout repository
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    # Leverage the GHA cache managed by the setup Go action.
    # This should use the cache from the `gomod` job
    -
      name: Setup Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      with:
        go-version-file: 'go.mod'
    -
      run: make build BIN=${{ matrix.bin }} GOBORING=true
  docs:
    runs-on: ubuntu-20.04
    needs: gomod
    steps:
    -
      name: Checkout repository
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    -
      run: make docs
  release:
    runs-on: ubuntu-20.04
    needs: [test, build]
    if: github.ref_name == 'master' || startsWith(github.ref, 'refs/tags')
    permissions:
      packages: write
    steps:
    -
      name: Checkout repository
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    # Leverage the GHA cache managed by the setup Go action.
    # This should use the cache from the `gomod` job
    -
      name: Setup Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      with:
        go-version-file: 'go.mod'
    -
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - run: make release-snapshot
    - run: ./build/push_images.sh
