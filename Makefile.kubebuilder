# Copyright 2023 The Kanister Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Image URL to use all building/pushing image targets

# The binary to build (just the basename).
REPOSERVER_BIN := repo-server-controller

REPOSITORY_SERVER_IMAGE_NAME := repo-server-controller
REPOSERVER_IMAGE ?= $(REGISTRY)/$(REPOSITORY_SERVER_IMAGE_NAME)

## Tool Versions

CONTROLLER_TOOLS_VERSION ?= v0.9.2

##@ General

# The repo-server-help target prints out all targets with their descriptions organized
# beneath their categories. The categories are represented by '##@' and the
# target descriptions by '##'. The awk commands is responsible for reading the
# entire set of makefiles included in this invocation, looking for lines of the
# file as xyz: ## something, and then pretty-format the target and help. Then,
# if there's a line with ##@ something, that gets pretty-printed as a category.
# More info on the usage of ANSI control characters for terminal formatting:
# https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_parameters
# More info on the awk command:
# http://linuxcommand.org/lc3_adv_awk.php

.PHONY: repo-server-help
repo-server-help: ## Display the help regarding building and deloying kopia repository server.
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

##@ Development

.PHONY: manifests
manifests: ## Generates CustomResourceDefinition objects.
	@$(MAKE) run CMD='-c "./build/generate_crds.sh ${CONTROLLER_TOOLS_VERSION}"'

##@ Build

.PHONY: repo-server-build
repo-server-build:  ## Build repository server binary.
	@$(MAKE) run CMD='-c " \
	goreleaser build --id $(REPOSERVER_BIN) --rm-dist --debug --snapshot \
	&& cp dist/$(REPOSERVER_BIN)_linux_$(ARCH)/$(REPOSERVER_BIN) bin/$(ARCH)/$(REPOSERVER_BIN) \
	"'

##@ Install

.PHONY: repo-server-install-crd
repo-server-install-crd: ## Install repository server CRDs into the K8s cluster specified in ~/.kube/config.
	kubectl apply -f pkg/customresource/repositoryserver.yaml

.PHONY: repo-server-uninstall-crd
repo-server-uninstall-crd: ## Uninstall repository server CRDs from the K8s cluster specified in ~/.kube/config.
	kubectl delete -f pkg/customresource/repositoryserver.yaml
