1. After the statefulset is created completely, one can check which instance is primary by running:

    $ for ((i = 0; i < {{ .Values.replicas }}; ++i)); do kubectl exec --namespace {{ .Release.Namespace }} {{ template "mongodb-replicaset.fullname" . }}-$i -- sh -c 'mongo --eval="printjson(rs.isMaster())"'; done

2. One can insert a key into the primary instance of the mongodb replica set by running the following:
    MASTER_POD_NAME must be replaced with the name of the master found from the previous step.

    $ kubectl exec --namespace {{ .Release.Namespace }} MASTER_POD_NAME -- mongo --eval="printjson(db.test.insert({key1: 'value1'}))"

3. One can fetch the keys stored in the primary or any of the slave nodes in the following manner.
    POD_NAME must be replaced by the name of the pod being queried.

    $ kubectl exec --namespace {{ .Release.Namespace }} POD_NAME -- mongo --eval="rs.slaveOk(); db.test.find().forEach(printjson)"

4. To perform a backup using Kanister, simply create an ActionSet:
{{- if not .Values.kanister.create_profile }}
(Assuming you previously created profiles.cr.kanister.io CR <kanister-profile> in namespace <kanister>)
{{- end }}
    $ cat << EOF | kubectl create -f -
        apiVersion: cr.kanister.io/v1alpha1
        kind: ActionSet
        metadata:
          generateName: mongo-backup-
          namespace: {{ .Values.kanister.controller_namespace }}
        spec:
          actions:
            - name: backup
              blueprint: {{ template "mongodb-replicaset.fullname" . }}-blueprint
              object:
                kind: StatefulSet
                name: {{ template "mongodb-replicaset.fullname" . }}
                namespace: {{ .Release.Namespace }}
              profile:
                apiVersion: v1alpha1
                kind: Profile
                {{- if .Values.kanister.create_profile }}
                name: {{ template "mongodb-replicaset.fullname" . }}-profile
                  {{- if .Values.kanister.profile_namespace }}
                namespace: {{ .Values.kanister.profile_namespace }}
                  {{- else }}
                namespace: {{ .Release.Namespace }}
                  {{- end }}
                {{- else }}
                name: <kanister-profile>
                namespace: <kanister>
                {{- end }}
    EOF
