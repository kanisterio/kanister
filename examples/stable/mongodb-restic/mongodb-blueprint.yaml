apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: mongodb-blueprint
actions:
  backup:
    type: StatefulSet
    outputArtifacts:
      backupInfo:
        keyValue:
          backupIdentifier: "{{ .Phases.backupSnapshots.Output.BackupAllInfo }}"
    phases:
    - func: BackupDataAll
      name: backupSnapshots
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        container: "mongodb"
        includePath: /bitnami/mongodb
        backupArtifactPrefix: "{{ .Profile.Location.Bucket }}/mongodb-backups/{{ .StatefulSet.Name }}/rs_backup"
  restore:
    type: StatefulSet
    phases:
    # Scale down mongodb replicas
    - func: ScaleWorkload
      name: shutdownPrimary
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        name: '{{ index .Object.metadata.labels "app.kubernetes.io/instance" }}-mongodb'
        kind: StatefulSet
        replicas: 0
    - func: ScaleWorkload
      name: shutdownArbiter
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        name: '{{ index .Object.metadata.labels "app.kubernetes.io/instance" }}-mongodb-arbiter'
        kind: StatefulSet
        replicas: 0

    # Restore data to primary db
    - func: RestoreDataAll
      name: restorePrimary
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        image: ghcr.io/kanisterio/kanister-tools:0.45.0
        backupArtifactPrefix: "{{ .Profile.Location.Bucket }}/mongodb-backups/{{ .StatefulSet.Name }}/rs_backup"
        backupInfo: "{{ .ArtifactsIn.backupInfo.KeyValue.backupIdentifier }}"

    # Delete data from secondary replicas to perform initial sync
    # https://docs.mongodb.com/manual/tutorial/restore-replica-set-from-backup/#update-secondaries-using-initial-sync
    - func: PrepareData
      name: syncSecondary
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        image: busybox
        volumes:
          datadir-my-release-mongodb-1: "/mongo/secondary"
        command:
          - sh
          - -c
          - |
            rm -rf /mongo/secondary/data/db/*

    # Restart mongo replicas
    - func: ScaleWorkload
      name: startPrimary
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        name: "{{ .StatefulSet.Name }}"
        kind: StatefulSet
        replicas: 1
    - func: ScaleWorkload
      name: startArbiter
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        name: '{{ index .Object.metadata.labels "app.kubernetes.io/instance" }}-mongodb-arbiter'
        kind: StatefulSet
        replicas: 1

  delete:
    type: Namespace
    phases:
    - func: DeleteDataAll
      name: deleteSnapshots
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        backupArtifactPrefix: "{{ .Profile.Location.Bucket }}/mongodb-backups/{{ .StatefulSet.Name }}/rs_backup"
        backupInfo: "{{ .ArtifactsIn.backupInfo.KeyValue.backupIdentifier }}"
        reclaimSpace: true
