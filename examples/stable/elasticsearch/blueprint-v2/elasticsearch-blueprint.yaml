apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: elasticsearch-blueprint
actions:
  backup:
    type: StatefulSet
    outputArtifacts:
      esBackup:
        keyValue:
          backupPath: "{{ .Phases.backupToStore.Output.backupPath }}"
          backupID: "{{ .Phases.backupToStore.Output.backupID }}"
    phases:
    - func: KubeTask
      name: backupToStore
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        image: "ghcr.io/kanisterio/es-sidecar:0.53.0"
        command:
        - bash
        - -o
        - errexit
        - -o
        - pipefail
        - -c
        - |
          host_name="{{ .Object.spec.serviceName }}.{{ .StatefulSet.Namespace }}.svc.cluster.local"
          BACKUP_PATH=es_backups/{{ .StatefulSet.Namespace }}/{{ .StatefulSet.Name }}/{{ toDate "2006-01-02T15:04:05.999999999Z07:00" .Time | date "2006-01-02T15:04:05Z07:00" }}/backup.gz
          elasticdump --bulk=true --input=http://${host_name}:9200 --output=/backup
          gzip /backup
          kando location push --profile '{{ toJson .Profile }}'  /backup.gz --path $BACKUP_PATH
          kando output backupPath $BACKUP_PATH
  restore:
    type: StatefulSet
    inputArtifactNames:
    - esBackup
    phases:
    - func: KubeTask
      name: restoreFromStore
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        image: "ghcr.io/kanisterio/es-sidecar:0.53.0"
        command:
        - bash
        - -o
        - errexit
        - -o
        - pipefail
        - -c
        - |
          host_name="{{ .Object.spec.serviceName }}.{{ .StatefulSet.Namespace }}.svc.cluster.local"
          backup_path='{{ .ArtifactsIn.esBackup.KeyValue.backupPath }}'
          backup_id='{{ .ArtifactsIn.esBackup.KeyValue.backupID }}'
          kando location pull --profile '{{ toJson .Profile }}' --path ${backup_path} --backupID ${backup_id} - | gunzip | elasticdump --bulk=true --input=$ --output=http://${host_name}:9200
  delete:
    type: Namespace
    inputArtifactNames:
    - esBackup
    phases:
    - func: KubeTask
      name: deleteFromStore
      args:
        namespace: "{{ .Namespace.Name }}"
        image: "ghcr.io/kanisterio/es-sidecar:0.53.0"
        command:
        - bash
        - -o
        - errexit
        - -o
        - pipefail
        - -c
        - |
          backup_path='{{ .ArtifactsIn.esBackup.KeyValue.backupPath }}'
          backup_id='{{ .ArtifactsIn.esBackup.KeyValue.backupID }}'
          kando location delete --profile '{{ toJson .Profile }}' --path ${backup_path} --backupID ${backup_id}
