apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: etcd-blueprint
actions:
  backup:
    outputArtifacts:
      cloudObject:
        keyValue:
          backupLocation: "{{ .Phases.uploadSnapshot.Output.backupLocation }}"
    phases:
    - func: KubeTask
      name: takeSnapshot
      objects:
        etcdConfig:
          kind: Secret
          name: "etcd-{{ .Object.metadata.name }}"
          namespace: "{{ .Object.metadata.name }}"
      args:
        image: kanisterio/kanister-kubectl:1.18
        command:
          - sh
          - -c
          - |
            export cacert="{{ index .Phases.takeSnapshot.Secrets.etcdConfig.Data "cacert" | toString }}"
            export cert="{{ index .Phases.takeSnapshot.Secrets.etcdConfig.Data "cert" | toString }}"
            export endpoints="{{ index .Phases.takeSnapshot.Secrets.etcdConfig.Data "endpoints" | toString }}"
            export key="{{ index .Phases.takeSnapshot.Secrets.etcdConfig.Data "key" | toString }}"
            export labels="{{ index .Phases.takeSnapshot.Secrets.etcdConfig.Data "labels" | toString }}"

            ETCD_POD=$(kubectl get pods -n {{ .Object.metadata.name }} -l $labels -ojsonpath='{.items[0].metadata.name}')

            kubectl exec -it -n {{ .Object.metadata.name }} $ETCD_POD -c etcd -- sh -c "ETCDCTL_API=3 etcdctl --endpoints=$endpoints --cacert=$cacert  --cert=$cert  --key=$key snapshot save /tmp/etcd-backup.db"
            kando output etcdPod $ETCD_POD

    - func: KubeTask
      name: uploadSnapshot
      args:
        image: kanisterio/kanister-kubectl:1.18
        command:
          - sh
          - -c
          - |
            BACKUP_LOCATION=etcd_backups/{{ .Object.metadata.name }}/{{ toDate "2006-01-02T15:04:05.999999999Z07:00" .Time | date "2006-01-02T15:04:05Z07:00" }}/etcd-backup.db.gz
            kubectl cp {{ .Object.metadata.name }}/{{ .Phases.takeSnapshot.Output.etcdPod }}:/tmp/etcd-backup.db /tmp/etcd-backup.db
            gzip /tmp/etcd-backup.db
            kando location push --profile '{{ toJson .Profile }}'  /tmp/etcd-backup.db.gz --path $BACKUP_LOCATION
            kando output backupLocation $BACKUP_LOCATION

    - func: KubeTask
      name: removeSnapshot
      args:
        image: kanisterio/kanister-kubectl:1.18
        command:
          - sh
          - -c
          - |
            kubectl exec -it -n {{ .Object.metadata.name }} {{ .Phases.takeSnapshot.Output.etcdPod }} -c etcd -- sh -c "rm -rf  /tmp/etcd-backup.db"

  delete:
    type: Namespace
    inputArtifactNames:
    - cloudObject
    phases:
    - func: KubeTask
      name: deleteFromObjectStore
      args:
        namespace: "{{ .Namespace.Name }}"
        image: "kanisterio/kanister-tools:0.32.0"
        command:
        - bash
        - -o
        - errexit
        - -o
        - pipefail
        - -c
        - |
          kando location delete --profile '{{ toJson .Profile }}' --path '{{ .ArtifactsIn.cloudObject.KeyValue.backupLocation }}'
